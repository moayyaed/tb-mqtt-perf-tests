#
# Copyright Â© 2016-2024 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

server:
  port: "${HTTP_BIND_PORT:8088}"

mqtt:
  host: "${MQTT_HOST:localhost}"
  ports: "${MQTT_PORT:1883}"
  ssl:
    enabled: "${MQTT_SSL_ENABLED:false}"
    protocol: "${MQTT_SSL_PROTOCOL:TLSv1.2}"
    key_store: "${MQTT_SSL_KEY_STORE:key-store.jks}"
    key_store_password: "${MQTT_SSL_KEY_STORE_PASSWORD:keystore_password}"
    # Password used to access the key
    key_password: "${MQTT_SSL_KEY_PASSWORD:key_password}"
    # Type of the key store
    key_store_type: "${MQTT_SSL_KEY_STORE_TYPE:JKS}"
    # Path to the trust store that holds the SSL certificate
    trust_store: "${MQTT_SSL_TRUST_STORE:trust-store.jks}"
    # Password used to access the trust store
    trust_store_password: "${MQTT_SSL_TRUST_STORE_PASSWORD:truststore_password}"
    # Type of the trust store
    trust_store_type: "${SECURITY_MQTT_SSL_TRUST_STORE_TYPE:JKS}"
  client:
    keep-alive-seconds: "${CLIENT_KEEP_ALIVE_SECONDS:600}"
    # Comma-separated list of IP addresses
    ip_addresses: "${CLIENT_IP_ADDRESSES:}"
  netty:
    # Netty worker threads count
    worker_group_thread_count: "${MQTT_NETTY_WORKER_GROUP_THREADS:12}"
    # Netty leak detector level
    leak_detector_level: "${NETTY_LEAK_DETECTOR_LVL:DISABLED}"
broker:
  type: "${BROKER_TYPE:THINGSBOARD}"

tb-broker:
  uri: "${TB_URI:http://localhost:8083}"
  admin:
    username: "${TB_ADMIN_USERNAME:sysadmin@thingsboard.org}"
    password: "${TB_ADMIN_PASSWORD:sysadmin}"

test-run:
  default:
    pub-sub-groups-count: "${TEST_RUN_DEFAULT_PUB_SUB_GROUPS_COUNT:100}"
    seconds-to-run: "${TEST_RUN_DEFAULT_SECONDS_TO_RUN:30}"
    additional-seconds-to-wait: "${TEST_RUN_DEFAULT_ADDITIONAL_SECONDS_TO_WAIT:10}"
    dummy-clients: "${TEST_RUN_DEFAULT_DUMMY_CLIENTS:0}"
    max-msgs-per-publisher-per-second: "${TEST_RUN_DEFAULT_MAX_MSGS_PER_PUBLISHER_PER_SECOND:1}"
    publisher-qos: "${TEST_RUN_DEFAULT_PUBLISHER_QOS:0}"
    subscriber-qos: "${TEST_RUN_DEFAULT_SUBSCRIBER_QOS:0}"
    min-payload-size: "${TEST_RUN_DEFAULT_MIN_PAYLOAD_SIZE:256}"
    max-concurrent-operations: "${TEST_RUN_DEFAULT_MAX_CONCURRENT_OPERATIONS:1000}"

  # If the configuration file is not set, the default configuration (p2p) will be used.
  # "p2p" or "point-to-point" refers to a 1 publisher to 1 subscriber configuration.
  # Use TEST_RUN_DEFAULT_PUB_SUB_GROUPS_COUNT to define the number of p2p groups.
  configuration-file: "${TEST_RUN_CONFIGURATION_FILE:}"

  # Could be ORCHESTRATOR or RUNNER
  orchestrator-url: "${TEST_RUN_TEST_ORCHESTRATOR_URL:}"
  node-url: "${TEST_RUN_TEST_NODE_URL:}"

  max-cluster-wait-time: "${TEST_RUN_MAX_CLUSTER_WAIT_TIME_SECONDS:60}"
  cluster-process-wait-time: "${TEST_RUN_CLUSTER_PROCESS_WAIT_TIME_SECONDS:60}"
  clear-persisted-sessions-wait-time: "${TEST_RUN_CLEAR_PERSISTED_SESSIONS_WAIT_TIME_SECONDS:60}"

  sequential-number: "${TEST_RUN_SEQUENTIAL_NUMBER:}"
  parallel-tests-count: "${TEST_RUN_PARALLEL_TESTS_COUNT:1}"
  total-tests-count: "${TEST_RUN_TOTAL_TESTS_COUNT:0}" # sum of tests when subscribers and publishers are separated

  publisher-warmup-count: "${TEST_RUN_PUBLISHER_WARMUP_COUNT:10}"
  publisher-warmup-wait-time: "${TEST_RUN_PUBLISHER_WARMUP_WAIT_TIME_SECONDS:30}"
  publisher-warmup-sleep: "${TEST_RUN_PUBLISHER_WARMUP_SLEEP_MS:5000}"
  publisher-warmup-iteration-sleep: "${TEST_RUN_PUBLISHER_WARMUP_ITERATION_SLEEP_MS:500}"

  wait-time-after-clients-disconnect-ms: "${TEST_RUN_WAIT_TIME_MS_AFTER_CLIENTS_DISCONNECT:5000}"
  wait-time-clients-closed-ms: "${TEST_RUN_WAIT_TIME_MS_CLIENTS_CLOSED:5000}"

  max_total_clients_per_iteration: "${TEST_RUN_MAX_TOTAL_CLIENTS_PER_ITERATION:0}" # 0 means no limit
  max_publish_topic_group_idx: "${TEST_RUN_MAX_PUBLISH_TOPIC_GROUP_IDX:25000}"

  publish-chunk-size-divider: "${TEST_RUN_PUBLISH_CHUNK_SIZE_DIVIDER:1}"

  logs:
    msg-processing-queue-period: "${TEST_RUN_LOGS_MSG_PROCESSING_QUEUE_PERIOD:15000}"

stats:
  enabled: "${STATS_ENABLED:true}"
  period: "${STATS_PERIOD_SECS:10}" # interval in seconds for printing stats

#
# Copyright Â© 2016-2022 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


mqtt:
  host: "${MQTT_HOST:localhost}"
#  ports: "${MQTT_PORT:1883,1882}"
  ports: "${MQTT_PORT:1883}"
#  ports: "${MQTT_PORT:1885}"
  ssl:
    enabled: "${MQTT_SSL_ENABLED:false}"
    protocol: "${MQTT_SSL_PROTOCOL:TLSv1.2}"
    key_store: "${MQTT_SSL_KEY_STORE:key-store.jks}"
    key_store_password: "${MQTT_SSL_KEY_STORE_PASSWORD:keystore_password}"
    # Password used to access the key
    key_password: "${MQTT_SSL_KEY_PASSWORD:key_password}"
    # Type of the key store
    key_store_type: "${MQTT_SSL_KEY_STORE_TYPE:JKS}"
    # Path to the trust store that holds the SSL certificate
    trust_store: "${MQTT_SSL_TRUST_STORE:trust-store.jks}"
    # Password used to access the trust store
    trust_store_password: "${MQTT_SSL_TRUST_STORE_PASSWORD:truststore_password}"
    # Type of the trust store
    trust_store_type: "${SECURITY_MQTT_SSL_TRUST_STORE_TYPE:JKS}"
  client:
    keep-alive-seconds: "${CLIENT_KEEP_ALIVE_SECONDS:600}"
  netty:
    worker_group_thread_count: "${MQTT_NETTY_WORKER_GROUP_THREADS:12}"
broker:
  type: "${BROKER_TYPE:THINGSBOARD}"
#  type: "${BROKER_TYPE:OTHER}"

tb-broker:
  uri: "${TB_URI:http://localhost:8083}"
  admin:
    username: "${TB_ADMIN_USERNAME:sysadmin@thingsboard.org}"
    password: "${TB_ADMIN_PASSWORD:sysadmin}"


test-run:
  # Could be ORCHESTRATOR or RUNNER
  orchestrator-url: "${TEST_RUN_TEST_ORCHESTRATOR_URL:}"
  node-url: "${TEST_RUN_TEST_NODE_URL:}"
  max-cluster-wait-time: "${TEST_RUN_MAX_CLUSTER_WAIT_TIME_SECONDS:60}"
  configuration-file: "${TEST_RUN_CONFIGURATION_FILE:}"
  sequential-number: "${TEST_RUN_SEQUENTIAL_NUMBER:0}"
  parallel-tests-count: "${TEST_RUN_PARALLEL_TESTS_COUNT:1}"
  publisher-warmup-count: "${TEST_RUN_PUBLISHER_WARMUP_COUNT:10}"
  publisher-warmup-wait-time: "${TEST_RUN_PUBLISHER_WARMUP_WAIT_TIME_SECONDS:30}"
  publisher-warmup-sleep: "${TEST_RUN_PUBLISHER_WARMUP_SLEEP_MS:5000}"
  cluster-process-wait-time: "${TEST_RUN_CLUSTER_PROCESS_WAIT_TIME_SECONDS:60}"
  clear-persisted-sessions-wait-time: "${TEST_RUN_CLEAR_PERSISTED_SESSIONS_WAIT_TIME_SECONDS:60}"
  wait-time-after-clients-disconnect-ms: "${TEST_RUN_WAIT_TIME_MS_AFTER_CLIENTS_DISCONNECT:5000}"
  wait-time-clients-closed-ms: "${TEST_RUN_WAIT_TIME_MS_CLIENTS_CLOSED:5000}"
  dummy_clients_persistent: "${TEST_RUN_DUMMY_CLIENTS_PERSISTENT:false}"
  publisher_clients_persistent: "${TEST_RUN_PUBLISHER_CLIENTS_PERSISTENT:false}"
  max_total_clients_per_iteration: "${TEST_RUN_MAX_TOTAL_CLIENTS_PER_ITERATION:0}" # 0 means no limit
  logs:
    msg-processing-queue-period: "${TEST_RUN_LOGS_MSG_PROCESSING_QUEUE_PERIOD:15000}"

stats:
  enabled: "${STATS_ENABLED:true}"

server:
  port: "${HTTP_BIND_PORT:8088}"
